# References
# https://github.internet2.edu/docker/grouper_training/blob/master/full-demo/container_files/grouper-loader.properties
# https://spaces.at.internet2.edu/display/Grouper/Grouper+Loader+LDAP+examples
# https://github.com/Internet2/grouper/blob/master/grouper/conf/grouper-loader.base.properties
# https://spaces.at.internet2.edu/display/Grouper/Grouper+Provisioning%3A+PSPNG


changeLog.changeLogTempToChangeLog.quartz.cron = 0/10 * * * * ?


#################################
## LDAP connections
#################################
# specify the ldap connection with user, pass, url
# the string after "ldap." is the ID of the connection, and it should not have
# spaces or other special chars in it.  In this case is it "personLdap"

#note the URL should start with ldap: or ldaps: if it is SSL.  
#It should contain the server and port (optional if not default), and baseDn,
#e.g. ldaps://ldapserver.school.edu:636/dc=school,dc=edu


ldap.myopenldap.url = ldap://openldap:389
 
#optional, if authenticated
ldap.myopenldap.user = cn=Manager,${LDAP_DCDOMAIN}
 
#optional, if authenticated note the password can be stored encrypted in an external file
ldap.myopenldap.pass = The1Directory2Manager3Password
ldap.myopenldap.pass = ${LDAP_DM_PASSWORD}
 
#optional, if you are using tls, set this to true.  Generally you will not be using an SSL URL to use TLS...
ldap.myopenldap.tls = false
 
#optional, if using sasl
ldap.personLdap.id = personLdap
ldap.personLdap.serverId = personLdap
ldap.personLdap.server.id = personLdap
ldap.personLdap.source.id = personLdap
ldap.personLdap.sourceId = personLdap
ldap.personLdap.url = ${GROUPER_LDAP_SUBJECT_SOURCE}
${SUBJECT_SOURCE_AUTH_COMMENT}ldap.personLdap.user = ${GROUPER_LDAP_SUBJECT_SOURCE_PRINCIPAL}
${SUBJECT_SOURCE_AUTH_COMMENT}ldap.personLdap.pass =  ${GROUPER_LDAP_SUBJECT_SOURCE_PASSWORD}
 
#make the paths fully qualified and not relative to the loader group.
loader.ldap.requireTopStemAsStemFromConfigGroup=false

###################################
# Send some debug info to the log #
###################################

changeLog.consumer.printTest.class = edu.internet2.middleware.grouper.changeLog.consumer.PrintTest
changeLog.consumer.printTest.quartzCron = 0 * * * * ?


###############################
# pspng configuration         #
###############################

# full synchronization - for production this would likely be nightly instead of every 30 minutes

otherJob.psp_groupOfNames.runAtStartup = true
otherJob.psp_groupOfNames.quartzCron =  30 5,35 * * * ?
otherJob.psp_groupOfNames.class = edu.internet2.middleware.grouper.pspng.FullSyncStarter

otherJob.pspng_entitlements.runAtStartup = true
otherJob.pspng_entitlements.quartzCron =  30 5,35 * * * ?
otherJob.pspng_entitlements.class = edu.internet2.middleware.grouper.pspng.FullSyncStarter

otherJob.pspng_membership.runAtStartup = true
otherJob.pspng_membership.quartzCron =  30 5,35 * * * ?
otherJob.pspng_membership.class = edu.internet2.middleware.grouper.pspng.FullSyncStarter

loader.ldap.requireTopStemAsStemFromConfigGroup=false

# Start provisioner configuration, groupOfNames

changeLog.consumer.psp_groupOfNames.provisionerName = psp_groupOfNames
changeLog.consumer.psp_groupOfNames.class = edu.internet2.middleware.grouper.pspng.PspChangelogConsumerShim
changeLog.consumer.psp_groupOfNames.type = edu.internet2.middleware.grouper.pspng.LdapGroupProvisioner
changeLog.consumer.psp_groupOfNames.quartzCron = 0 * * * * ?
changeLog.consumer.psp_groupOfNames.ldapPoolName = myopenldap
changeLog.consumer.psp_groupOfNames.supportsEmptyGroups = false
changeLog.consumer.psp_groupOfNames.memberAttributeName = member
changeLog.consumer.psp_groupOfNames.memberAttributeValueFormat = ${ldapUser.getDn()}
changeLog.consumer.psp_groupOfNames.groupSearchBaseDn = ou=Groups,${LDAP_DCDOMAIN}
changeLog.consumer.psp_groupOfNames.allGroupsSearchFilter = objectclass=groupOfNames
changeLog.consumer.psp_groupOfNames.singleGroupSearchFilter = (&(objectclass=groupOfNames)(cn=${group.name}))
changeLog.consumer.psp_groupOfNames.groupSearchAttributes = cn,objectclass
changeLog.consumer.psp_groupOfNames.groupCreationLdifTemplate = dn: cn=${group.name}||cn: ${group.name}||objectclass: groupOfNames
changeLog.consumer.psp_groupOfNames.userSearchBaseDn = ou=People,${LDAP_DCDOMAIN}
changeLog.consumer.psp_groupOfNames.userSearchFilter = uid=${subject.id}
changeLog.consumer.psp_groupOfNames.grouperIsAuthoritative = true
changeLog.consumer.psp_groupOfNames.provisionedAttributeName = eduPersonEntitlement
changeLog.consumer.psp_groupOfNames.provisionedAttributeValueFormat = g:${group.name}
changeLog.consumer.psp_groupOfNames.createMissingUsers = true
changeLog.consumer.psp_groupOfNames.userCreationBaseDn = ou=People,${LDAP_DCDOMAIN}
changeLog.consumer.psp_groupOfNames.userCreationLdifTemplate = dn: uid=${subject.id.replace("+","\\+")}||uid: ${subject.id}||objectclass: top||objectclass: person||objectclass: organizationalPerson||objectclass: inetOrgPerson||objectclass: eduPerson||objectclass: eduMember||sn: ${subject.id}||cn: ${subject.name}||eduPersonPrincipalName: ${subject.id}@${USER_EPPN_DOMAIN}


# Start provisioner configuration, entitlement

changeLog.consumer.pspng_entitlements.provisionerName =  pspng_entitlements
changeLog.consumer.pspng_entitlements.class = edu.internet2.middleware.grouper.pspng.PspChangelogConsumerShim
changeLog.consumer.pspng_entitlements.type = edu.internet2.middleware.grouper.pspng.LdapAttributeProvisioner
changeLog.consumer.pspng_entitlements.quartzCron = 20 * * * * ?
changeLog.consumer.pspng_entitlements.ldapPoolName = myopenldap
changeLog.consumer.pspng_entitlements.provisionedAttributeName = eduPersonEntitlement
changeLog.consumer.pspng_entitlements.provisionedAttributeValueFormat = urn:mace:${SCHOOL_BASE_DOMAIN}:${group.name}
changeLog.consumer.pspng_entitlements.userSearchBaseDn = ou=People,${LDAP_DCDOMAIN}
changeLog.consumer.pspng_entitlements.userSearchFilter = uid=${subject.id}
changeLog.consumer.pspng_entitlements.allProvisionedValuesPrefix=urn:mace:${SCHOOL_BASE_DOMAIN}:
changeLog.consumer.pspng_entitlements.createMissingUsers = true
changeLog.consumer.pspng_entitlements.userCreationBaseDn = ou=People,${LDAP_DCDOMAIN}
changeLog.consumer.pspng_entitlements.userCreationLdifTemplate = dn: uid=${subject.id.replace("+","\\+")}||uid: ${subject.id}||objectclass: top||objectclass: person||objectclass: organizationalPerson||objectclass: inetOrgPerson||objectclass: eduPerson||objectclass: eduMember||sn: ${subject.id}||cn: ${subject.name}||eduPersonPrincipalName: ${subject.id}@${USER_EPPN_DOMAIN}


# Start provisioner configuration, isMemberOf

changeLog.consumer.pspng_membership.provisionerName =  pspng_membership
changeLog.consumer.pspng_membership.class = edu.internet2.middleware.grouper.pspng.PspChangelogConsumerShim
changeLog.consumer.pspng_membership.type = edu.internet2.middleware.grouper.pspng.LdapAttributeProvisioner
changeLog.consumer.pspng_membership.quartzCron = 40 * * * * ?
changeLog.consumer.pspng_membership.ldapPoolName = myopenldap
changeLog.consumer.pspng_membership.userSearchBaseDn = ou=People,${LDAP_DCDOMAIN}
changeLog.consumer.pspng_membership.userSearchFilter = uid=${subject.id}
changeLog.consumer.pspng_membership.provisionedAttributeName = isMemberOf
changeLog.consumer.pspng_membership.provisionedAttributeValueFormat = ${group.name}
changeLog.consumer.pspng_membership.createMissingUsers = true
changeLog.consumer.pspng_membership.userCreationBaseDn = ou=People,${LDAP_DCDOMAIN}
changeLog.consumer.pspng_membership.userCreationLdifTemplate = dn: uid=${subject.id.replace("+","\\+")}||uid: ${subject.id}||objectclass: top||objectclass: person||objectclass: organizationalPerson||objectclass: inetOrgPerson||objectclass: eduPerson||objectclass: eduMember||sn: ${subject.id}||cn: ${subject.name}||eduPersonPrincipalName: ${subject.id}@${USER_EPPN_DOMAIN}


