#################################
## LDAP connections
#################################
# specify the ldap connection with user, pass, url
# the string after "ldap." is the ID of the connection, and it should not have
# spaces or other special chars in it.  In this case is it "personLdap"

#
# https://spaces.at.internet2.edu/display/Grouper/Grouper+Provisioning%3A+PSPNG
#

#
# https://github.com/Internet2/grouper/tree/master/grouper-misc/grouper-pspng
#
 
#note the URL should start with ldap: or ldaps: if it is SSL.  
#It should contain the server and port (optional if not default), and baseDn,
#e.g. ldaps://ldapserver.school.edu:636/dc=school,dc=edu

ldap.myopenldap.url = ldap://openldap:389
 
#optional, if authenticated
ldap.myopenldap.user = cn=Manager,${LDAP_DCDOMAIN}
 
#optional, if authenticated note the password can be stored encrypted in an external file
ldap.myopenldap.pass = The1Directory2Manager3Password
ldap.myopenldap.pass = ${LDAP_DM_PASSWORD}
 
#optional, if you are using tls, set this to true.  Generally you will not be using an SSL URL to use TLS...
ldap.myopenldap.tls = false
 
#optional, if using sasl
ldap.personLdap.id = personLdap
ldap.personLdap.serverId = personLdap
ldap.personLdap.server.id = personLdap
ldap.personLdap.source.id = personLdap
ldap.personLdap.sourceId = personLdap
ldap.personLdap.url = ${GROUPER_LDAP_SUBJECT_SOURCE}
${SUBJECT_SOURCE_AUTH_COMMENT}ldap.personLdap.user = ${GROUPER_LDAP_SUBJECT_SOURCE_PRINCIPAL}
${SUBJECT_SOURCE_AUTH_COMMENT}ldap.personLdap.pass =  ${GROUPER_LDAP_SUBJECT_SOURCE_PASSWORD}
 
#optional (note, time limit is for search operations, timeout is for connection timeouts),
#most of these default to vt-ldap defaults.  times are in millis
#validateOnCheckout defaults to true if all other validate methods are false

#ldap.personLdap.batchSize =
#ldap.personLdap.countLimit =
#ldap.personLdap.timeLimit =
#ldap.personLdap.timeout =
#ldap.personLdap.minPoolSize =
#ldap.personLdap.maxPoolSize =
#ldap.personLdap.validateOnCheckIn =
#ldap.personLdap.validateOnCheckOut =
#ldap.personLdap.validatePeriodically =
#ldap.personLdap.validateTimerPeriod =
#ldap.personLdap.pruneTimerPeriod =
#if connections expire after a certain amount of time, this is it, in millis, defaults to 300000 (5 minutes)
#ldap.personLdap.expirationTime =

#make the paths fully qualified and not relative to the loader group.
loader.ldap.requireTopStemAsStemFromConfigGroup=false
#tried below true 20190325
#loader.ldap.requireTopStemAsStemFromConfigGroup=true

grouper.loader.ldap.server.id = personLdap
grouper.loader.ldap.serverId = personLdap

#############
# print changelog example
#############

#changeLog.consumer.printTest.class = edu.internet2.middleware.grouper.changeLog.consumer.PrintTest
#changeLog.consumer.printTest.quartzCron = 0 * * * * ?

#changeLog.consumer.abc.class = edu.internet2.middleware.grouper.changeLog.consumer.PrintChangeLogConsumer
#changeLog.consumer.abc.syncAttributeName = attr:provisioningMarker


# #####################################
# ## Messaging integration with change log
# #####################################
# changeLog.consumer.rabbitMqMessagingSample.quartzCron = 0 * * * * ?                                                          
# 
# # note, change "messagingSample" in key to be the name of the consumer.  e.g. changeLog.consumer.someNameAnyName.class
# changeLog.consumer.rabbitMqMessagingSample.class = edu.internet2.middleware.grouper.changeLog.esb.consumer.EsbConsumer
# 
# changeLog.consumer.rabbitMqMessagingSample.publisher.class = edu.internet2.middleware.grouper.changeLog.esb.consumer.EsbMessagingPublisher
# changeLog.consumer.rabbitMqMessagingSample.publisher.messagingSystemName = rabbitmq
# # note, routingKey property is valid only for rabbitmq. For other messaging systems, it is ignored.
# changeLog.consumer.rabbitMqMessagingSample.publisher.routingKey = 
# ## queue or topic
# changeLog.consumer.rabbitMqMessagingSample.publisher.messageQueueType = queue
# changeLog.consumer.rabbitMqMessagingSample.publisher.queueOrTopicName = sampleQueue
# ## this is optional if not using "id" for subjectId, need to be a subject attribute in the sources.xml
# #changeLog.consumer.rabbitMqMessagingSample.publisher.addSubjectAttributes = email

#changeLog.psp.fullSync.runAtStartup = true
changeLog.psp.fullSync.quartzCron =  0,5,10,15,20,25,30,35,40,45,50,55 * * * * ?
changeLog.pspng.fullSync.quartzCron =  0,5,10,15,20,25,30,35,40,45,50,55 * * * * ?


# # GROUP OF UNIQUE NAMES:
# changeLog.consumer.pspng_groupOfUniqueNames.class = edu.internet2.middleware.grouper.pspng.PspChangelogConsumerShim
# changeLog.consumer.pspng_groupOfUniqueNames.type = edu.internet2.middleware.grouper.pspng.LdapGroupProvisioner
# changeLog.consumer.pspng_groupOfUniqueNames.quartzCron = */2 * * * * ?
# changeLog.consumer.pspng_groupOfUniqueNames.ldapPoolName = myopenldap
# changeLog.consumer.pspng_groupOfUniqueNames.memberAttributeName = uniqueMember
# changeLog.consumer.pspng_groupOfUniqueNames.memberAttributeValueFormat = ${ldapUser.getDn()}
# changeLog.consumer.pspng_groupOfUniqueNames.groupSearchBaseDn = ou=Groups,${LDAP_DCDOMAIN}
# changeLog.consumer.pspng_groupOfUniqueNames.allGroupsSearchFilter = (objectclass=groupOfUniqueNames)
# changeLog.consumer.pspng_groupOfUniqueNames.singleGroupSearchFilter = (&(objectclass=groupOfUniqueNames)(cn=${group.name}))
# # do we need the next line?
# changeLog.consumer.pspng_groupOfUniqueNames.groupCreationBaseDn = ou=Groups,${LDAP_DCDOMAIN}
# changeLog.consumer.pspng_groupOfUniqueNames.groupCreationLdifTemplate = dn: cn=${group.name}||cn: ${group.name}||objectclass: groupOfUniqueNames
# changeLog.consumer.pspng_groupOfUniqueNames.userSearchBaseDn = ou=People,${LDAP_DCDOMAIN}
# changeLog.consumer.pspng_groupOfUniqueNames.userSearchFilter = (uid=${subject.id})
# changeLog.consumer.pspng_groupOfUniqueNames.userSearchAttributes = dn,cn,uid,mail,samAccountName,uidNumber,objectclass,eduPersonPrincipalName,eduPersonEntitlement
# 
# changeLog.consumer.pspng_groupOfUniqueNames.supportsEmptyGroups = false
# changeLog.consumer.pspng_groupOfUniqueNames.provisionerName = psp_groupOfUniqueNames
# 
# changeLog.consumer.pspng_groupOfUniqueNames.needsTargetSystemUsers = true
# changeLog.consumer.pspng_groupOfUniqueNames.needsTargetSystemGroups = false
# changeLog.consumer.pspng_groupOfUniqueNames.createMissingUsers = true
# changeLog.consumer.pspng_groupOfUniqueNames.userCreationLdifTemplate = dn: uid=${subject.id.replace("+","\\+")}||uid: ${subject.id}||objectclass: top||objectclass: person||objectclass: organizationalPerson||objectclass: inetOrgPerson||objectclass: eduPerson||sn: ${subject.id}||cn: ${subject.name}||eduPersonPrincipalName: ${subject.id}
# changeLog.consumer.pspng_groupOfUniqueNames.userCreationBaseDn = ou=People,${LDAP_DCDOMAIN}
# changeLog.consumer.pspng_groupOfUniqueNames.provisionedAttributeName = eduPersonEntitlement
# #changeLog.consumer.pspng_groupOfUniqueNames.provisionedAttributeValueFormat = g:${group.name}
# changeLog.consumer.pspng_groupOfUniqueNames.provisionedAttributeValueFormat = groups:${group.name}
# 
# changeLog.consumer.pspng_groupOfUniqueNames.isActiveDirectory = false
# changeLog.consumer.pspng_groupOfUniqueNames.grouperIsAuthoritative = true
# changeLog.consumer.pspng_groupOUniquefNames.groupSearchAttributes = cn,gidNumber,objectclass,uniqueMember



changeLog.consumer.psp_groupOfNames.provisionerName = psp_groupOfNames
changeLog.consumer.psp_groupOfNames.class = edu.internet2.middleware.grouper.pspng.PspChangelogConsumerShim
changeLog.consumer.psp_groupOfNames.type = edu.internet2.middleware.grouper.pspng.LdapGroupProvisioner
changeLog.consumer.psp_groupOfNames.quartzCron = 0,5,10,15,20,25,30,35,40,45,50,55 * * * * ?

changeLog.consumer.psp_groupOfNames.fullSync.runAtStartup = true
changeLog.consumer.psp_groupOfNames.fullSync.quartzCron = 3,33 * * * * ?

changeLog.consumer.psp_groupOfNames.retryOnError = true
changeLog.consumer.psp_groupOfNames.ldapPoolName = myopenldap
changeLog.consumer.psp_groupOfNames.isActiveDirectory = false
changeLog.consumer.psp_groupOfNames.groupSearch_batchSize = 1000
changeLog.consumer.psp_groupOfNames.ldapSearchResultPagingSize = 1000
changeLog.consumer.psp_groupOfNames.maxValuesToChangePerOperation = 5000
changeLog.consumer.psp_groupOfNames.memberAttributeName = member
changeLog.consumer.psp_groupOfNames.memberAttributeValueFormat = ${ldapUser.getDn()}
changeLog.consumer.psp_groupOfNames.grouperIsAuthoritative = true
changeLog.consumer.psp_groupOfNames.supportsEmptyGroups = false
changeLog.consumer.psp_groupOfNames.needsTargetSystemGroups = false
changeLog.consumer.psp_groupOfNames.needsTargetSystemUsers = true
changeLog.consumer.psp_groupOfNames.allGroupsSearchFilter = objectclass=groupOfNames
changeLog.consumer.psp_groupOfNames.groupSearchBaseDn = ou=Groups,${LDAP_DCDOMAIN}
changeLog.consumer.psp_groupOfNames.groupCreationBaseDn = ou=Groups,${LDAP_DCDOMAIN}
changeLog.consumer.psp_groupOfNames.singleGroupSearchFilter = (&(objectclass=groupOfNames)(cn=${group.name}))
changeLog.consumer.psp_groupOfNames.groupSearchAttributes = cn,gidNumber,objectclass,member
# original changeLog.consumer.psp_groupOfNames.groupCreationLdifTemplate = dn: cn=${group.name}||cn: ${group.name}||objectclass: top||objectclass: groupOfNames||objectclass: posixGroup||gidNumber: ${group.idIndex}
#changeLog.consumer.psp_groupOfNames.groupCreationLdifTemplate = dn: cn=${group.name}||cn: ${group.name}||objectclass: top||objectclass: groupOfNames||objectclass: posixGroup||gidNumber: ${group.idIndex}
# can't work -- two structural object classes
#changeLog.consumer.psp_groupOfNames.groupCreationLdifTemplate = dn: cn=${group.name}||cn: ${group.name}||objectclass: top||objectclass: groupOfNames||gidNumber: ${group.idIndex}
changeLog.consumer.psp_groupOfNames.groupCreationLdifTemplate = dn: cn=${group.name}||cn: ${group.name}||objectclass: top||objectclass: groupOfNames
changeLog.consumer.psp_groupOfNames.userSearchBaseDn = ${LDAP_DCDOMAIN}
changeLog.consumer.psp_groupOfNames.userSearchFilter = (&(objectclass=eduPerson)(uid=${subject.id}))
changeLog.consumer.psp_groupOfNames.userCreationBaseDn = ou=People,${LDAP_DCDOMAIN}
changeLog.consumer.psp_groupOfNames.createMissingUsers = true
changeLog.consumer.psp_groupOfNames.userCreationLdifTemplate = dn: uid=${subject.id.replace("+","\\+")}||uid: ${subject.id}||objectclass: top||objectclass: person||objectclass: organizationalPerson||objectclass: inetOrgPerson||objectclass: eduPerson||sn: ${subject.id}||cn: ${subject.name}||eduPersonPrincipalName: ${subject.id}@${USER_EPPN_DOMAIN}
changeLog.consumer.psp_groupOfNames.userSearchAttributes = dn,cn,uid,mail,samAccountName,uidNumber,objectclass,eduPersonPrincipalName

#  # POSIX groups
#  changeLog.consumer.psp_posixGroup.provisionerName = psp_posixGroup
#  changeLog.consumer.psp_posixGroup.class = edu.internet2.middleware.grouper.pspng.PspChangelogConsumerShim
#  changeLog.consumer.psp_posixGroup.type = edu.internet2.middleware.grouper.pspng.LdapGroupProvisioner
#  changeLog.consumer.psp_posixGroup.quartzCron = 3/5 * * * * ?
#  changeLog.consumer.psp_posixGroup.retryOnError = true
#  changeLog.consumer.psp_posixGroup.ldapPoolName = myopenldap
#  changeLog.consumer.psp_posixGroup.isActiveDirectory = false
#  changeLog.consumer.psp_posixGroup.groupSearch_batchSize = 1000
#  changeLog.consumer.psp_posixGroup.ldapSearchResultPagingSize = 1000
#  changeLog.consumer.psp_posixGroup.maxValuesToChangePerOperation = 5000
#  changeLog.consumer.psp_posixGroup.memberAttributeName = memberUid
#  #changeLog.consumer.psp_posixGroup.memberAttributeValueFormat = ${if(ldapUser.getStringValue("uid").toLowerCase().endsWith("@ufl.edu")){ldapUser.getStringValue("uid").toLowerCase().replace("@ufl.edu","")}else{ldapUser.getStringValue("uid").toLowerCase()}}
#  changeLog.consumer.psp_posixGroup.memberAttributeValueFormat = ${ldapUser.getStringValue("uid")}
#  changeLog.consumer.psp_posixGroup.grouperIsAuthoritative = true
#  changeLog.consumer.psp_posixGroup.supportsEmptyGroups = false
#  changeLog.consumer.psp_posixGroup.needsTargetSystemGroups = false
#  changeLog.consumer.psp_PosixGroup.needsTargetSystemUsers = true
#  changeLog.consumer.psp_posixGroup.groupSearchBaseDn = ou=groups,${LDAP_DCDOMAIN}
#  changeLog.consumer.psp_posixGroup.groupCreationBaseDn = ou=groups,${LDAP_DCDOMAIN}
#  changeLog.consumer.psp_posixGroup.allGroupsSearchFilter = objectclass=posixGroup
#  changeLog.consumer.psp_posixGroup.singleGroupSearchFilter = (&(objectclass=posixGroup)(cn=${group.name}))
#  changeLog.consumer.psp_posixGroup.groupSearchAttributes = cn,gidNumber,objectclass,memberUid
#  changeLog.consumer.psp_posixGroup.groupCreationLdifTemplate = dn: cn=${group.name}||cn: ${group.name}||objectclass: top||objectclass: groupOfNames||objectclass: posixGroup||gidNumber: ${group.idIndex}
#  changeLog.consumer.psp_posixGroup.userSearchBaseDn = ${LDAP_DCDOMAIN}
#  changeLog.consumer.psp_posixGroup.userSearchFilter = (&(objectclass=eduPerson)(uid=${subject.id}))
#  changeLog.consumer.psp_posixGroup.userCreationBaseDn = ou=People,${LDAP_DCDOMAIN}
#  changeLog.consumer.psp_posixGroup.createMissingUsers = true
#  changeLog.consumer.psp_posixGroup.userCreationLdifTemplate = dn: uid=${subject.id.replace("+","\\+")}||uid: ${subject.id}||objectclass: top||objectclass: person||objectclass: organizationalPerson||objectclass: inetOrgPerson||objectclass: eduPerson||sn: ${subject.id}||cn: ${subject.name}||eduPersonPrincipalName: ${subject.id}
#  changeLog.consumer.psp_posixGroup.userSearchAttributes = dn,cn,uid,mail,samAccountName,uidNumber,objectclass,eduPersonPrincipalName

#USER ATTRIBUTES - User
changeLog.consumer.psp_User.provisionerName = psp_User
changeLog.consumer.psp_User.class = edu.internet2.middleware.grouper.pspng.PspChangelogConsumerShim
changeLog.consumer.psp_User.type = edu.internet2.middleware.grouper.pspng.LdapAttributeProvisioner
changeLog.consumer.psp_User.quartzCron = */2 * * * * ?
changeLog.consumer.psp_User.retryOnError = true
changeLog.consumer.psp_User.ldapPoolName = myopenldap
changeLog.consumer.psp_User.grouperIsAuthoritative = true
changeLog.consumer.psp_User.isActiveDirectory = false
# changeLog.consumer.psp_User.groupSearch_batchSize = 1000
# changeLog.consumer.psp_User.ldapSearchResultPagingSize = 1000
changeLog.consumer.psp_User.needsTargetSystemUsers = true
changeLog.consumer.psp_User.needsTargetSystemGroups = false
changeLog.consumer.psp_User.provisionedAttributeName = eduPersonEntitlement
changeLog.consumer.psp_User.provisionedAttributeValueFormat = urn:mace:${SCHOOL_BASE_DOMAIN}:g:${group.name}
changeLog.consumer.psp_User.allProvisionedValuesPrefix = urn:mace:${SCHOOL_BASE_DOMAIN}:g:
# #changeLog.consumer.psp_User.userSearchBaseDn = ou=People,${LDAP_DCDOMAIN}
changeLog.consumer.psp_User.userSearchBaseDn = ou=People,${LDAP_DCDOMAIN}
changeLog.consumer.psp_User.userSearchFilter = (&(objectclass=Person)(uid=${subject.id}))
changeLog.consumer.psp_User.userSearchAttributes = dn,cn,uid,mail,samAccountName,uidNumber,objectclass,eduPersonPrincipalName,eduPersonEntitlement
changeLog.consumer.psp_User.userCreationBaseDn = ou=People,${LDAP_DCDOMAIN}
changeLog.consumer.psp_User.createMissingUsers = true
changeLog.consumer.psp_User.userCreationLdifTemplate = dn: uid=${subject.id.replace("+","\\+")}||uid: ${subject.id}||objectclass: top||objectclass: person||objectclass: organizationalPerson||objectclass: inetOrgPerson||objectclass: eduPerson||sn: ${subject.id}||cn: ${subject.name}||eduPersonPrincipalName: ${subject.id}@${USER_EPPN_DOMAIN}
# changeLog.consumer.psp_User.ldapUserCacheSize = 10000
# changeLog.consumer.psp_User.userSearch_batchSize = 1000
# changeLog.consumer.psp_User.groupSearch_batchSize = 1000
# 


# # USER ATTRIBUTES
# # below from grouper guides
# changeLog.consumer.pspng_attributes.class = edu.internet2.middleware.grouper.pspng.PspChangelogConsumerShim
# changeLog.consumer.pspng_attributes.type = edu.internet2.middleware.grouper.pspng.LdapAttributeProvisioner
# changeLog.consumer.pspng_attributes.quartzCron = */2 * * * * ?
# changeLog.consumer.pspng_attributes.retryOnError = true
# changeLog.consumer.pspng_attributes.ldapPoolName = myopenldap
# changeLog.consumer.pspng_attributes.provisionedAttributeName = eduPersonEntitlement
# changeLog.consumer.pspng_attributes.provisionedAttributeValueFormat = g:${group.name}
# changeLog.consumer.pspng_attributes.userSearchBaseDn = ou=People,${LDAP_DCDOMAIN}
# changeLog.consumer.pspng_attributes.userSearchFilter = uid=${subject.id}
# changeLog.consumer.pspng_attributes.allProvisionedAttributePrefix=g:
# 
# changeLog.consumer.pspng_attributes.needsTargetSystemUsers = true
# changeLog.consumer.pspng_attributes.needsTargetSystemGroups = false
# changeLog.consumer.pspng_attributes.createMissingUsers = true
# changeLog.consumer.pspng_attributes.userCreationLdifTemplate = dn: uid=${subject.id.replace("+","\\+")}||uid: ${subject.id}||objectclass: top||objectclass: person||objectclass: organizationalPerson||objectclass: inetOrgPerson||objectclass: eduPerson||sn: ${subject.id}||cn: ${subject.name}||eduPersonPrincipalName: ${subject.id}
# ### this shoud be above in groupOfUniqueNames --- or
# 
